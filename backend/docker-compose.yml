version: '3.2'

services:
    # api server
    flask:
        build:
            context: ./flask
        ports:
            - 3000:3000
        container_name: flask
        restart: always
        networks:
            - app_tier
        volumes:
            - ./flask:/app
        command: gunicorn -w 1 -b 0.0.0.0:3000 run:app

    # web server
    nginx:
        image: nginx:latest
        ports:
            - 8000:8000
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - flask
        networks:
            - app_tier
        restart: on-failure

    #elasticsearch
    elasticsearch:
        build:
            context: ./ELK/elasticsearch
        ports:
            - 9200:9200
            - 9300:9300
        networks:
            - app_tier
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
            ELASTIC_PASSWORD: "123456"
            discovery.type: single-node
        healthcheck:
            test: "curl http://elasticsearch:9200"
            interval: "1s"
            timeout: "3s"
            retries: 60
        ulimits:
            memlock:
                soft: -1
                hard: -1
        logging:
            driver: "json-file"
            options:
                max-size: "10k"
                max-file: "10"
    

    logstash:
        build:
            context: ./ELK/logstash
        restart: on-failure
        depends_on:
            - elasticsearch
        volumes:
            - ./ELK/logstash/pipeline/:/usr/share/logstash/pipeline/
            - ./ELK/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
            - ./ELK/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml
        logging:
            driver: "json-file"
            options:
                max-size: "10k"
                max-file: "10"
        networks:
            - app_tier

    
    #kibana
    kibana:
        build:
            context: ./ELK/kibana/
        ports:
            - 5601:5601
        volumes:
            - ./ELK/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
        
        networks:
            - app_tier
        depends_on:
            - elasticsearch        

networks:
    app_tier:
        driver: bridge


        